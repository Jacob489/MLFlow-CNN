name: Test Notebook with repo2docker

on:
  push:

jobs:
  repo2docker-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Make scripts executable
        run: |
          chmod +x start prepare_data.sh
          ls -la
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install repo2docker & Docker client
        run: |
          python -m pip install --upgrade pip
          pip install jupyter-repo2docker docker

      - name: Build Docker image
        run: |
          repo2docker --no-run --image-name notebook-test .

      - name: Debug container environment
        run: |
          # Launch container 
          docker run --name nbtest -d -e CI=true -e GITHUB_ACTIONS=true notebook-test tail -f /dev/null
          
          # Check directories and files
          echo "Listing home directory:"
          docker exec nbtest ls -la /home/jovyan/
          
          # Check if dataset directory exists
          echo "Checking for demo_astrodata directory:"
          docker exec nbtest ls -la /home/jovyan/demo_astrodata || echo "demo_astrodata directory not found"
          
          # Run prepare_data script manually if needed
          echo "Running prepare_data.sh manually in container:"
          docker exec -e CI=true -e GITHUB_ACTIONS=true nbtest bash -c "cd /home/jovyan && chmod +x prepare_data.sh && ./prepare_data.sh"
          
          # Check again for dataset files
          echo "Checking again for dataset files:"
          docker exec nbtest ls -la /home/jovyan/demo_astrodata || echo "Still no demo_astrodata directory"
          
          # Create marker file
          docker exec nbtest touch /home/jovyan/.ci_mode
          
          # Verify CI environment variables
          docker exec nbtest bash -c "echo CI=$CI; echo GITHUB_ACTIONS=$GITHUB_ACTIONS"

      - name: Execute notebook inside container
        run: |
          # Run with error output
          docker exec -e CI=true -e GITHUB_ACTIONS=true nbtest \
            jupyter nbconvert \
              --to notebook \
              --execute MLFLOW.ipynb \
              --output executed.ipynb \
              --ExecutePreprocessor.timeout=600 || echo "Notebook execution failed, but workflow continues"
          
          # Check if executed notebook was created
          docker exec nbtest ls -la /home/jovyan/ | grep executed.ipynb || echo "No executed notebook found"
          
          # Tear down
          docker stop nbtest